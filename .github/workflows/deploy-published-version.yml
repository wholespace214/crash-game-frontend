name: Deploy a previously published version (Will rebuild environment)

on:
  workflow_dispatch:
    inputs:
      stage:
        description: 'Stage to deploy: staging or production'
        required: true
        default: 'staging'
      version:
        description: 'Tag Version of this deploy'
        required: true
        default: '1.x.x'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      REACT_APP_NEWS_API_KEY: ${{ secrets.REACT_APP_NEWS_API_KEY }}
      STAGING_BACKEND_URL: ${{ secrets.STAGING_BACKEND_URL }}
      STAGING_CRASH_GAME_BACKEND_URL: ${{ secrets.STAGING_CRASH_GAME_BACKEND_URL }}
      PRODUCTIVE_BACKEND_URL: ${{ secrets.PRODUCTIVE_BACKEND_URL }}
      PRODUCTIVE_CRASH_GAME_BACKEND_URL: ${{ secrets.PRODUCTIVE_CRASH_GAME_BACKEND_URL }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - run: pwd
      - name: Validate inputs
        run: stage=${{ github.event.inputs.stage }} version=${{ github.event.inputs.version }} node ./.github/scripts/validate-release-inputs.js
      - name: Create spec file
        run: stage=${{ github.event.inputs.stage }} version=${{ github.event.inputs.version }} node ./.github/scripts/generate-spec.js > config.yaml
      - name: Install doctl (to be able to login on Digital Ocean)
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Authenticate on Digital Ocean
        run: doctl auth init
      - name: Deploy the new spec file to staging
        if: ${{ github.event.inputs.stage == 'staging' }}
        run: doctl apps update ${{ secrets.DIGITALOCEAN_STAGING_FRONTEND_ID }} --verbose --spec config.yaml --access-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} 
      - name: Deploy the new spec file to production
        if: ${{ github.event.inputs.stage == 'production' }}
        run: doctl apps update ${{ secrets.DIGITALOCEAN_PRODUCTION_FRONTEND_ID }} --verbose --spec config.yaml --acess-token ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} 
      