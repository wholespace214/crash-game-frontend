name: Deploy to Kubernetes cluster

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - production
      - development

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install node dependencies
        run: npm ci
      - name: Install doctl (to be able to login on Digital Ocean)
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Login to Digital Ocean docker registry
        run: doctl registry login
      - name: Set robots.txt (staging)
        if: github.ref == 'refs/heads/main'
        run: |
          cp public/robots_staging.txt public/robots.txt
      - name: Set robots.txt (production)
        if: github.ref == 'refs/heads/production'
        run: |
          cp public/robots_production.txt public/robots.txt
      - name: Build the docker image (staging)
        if: github.ref == 'refs/heads/main'
        run: |
          docker build . -q --build-arg REACT_APP_CRASH_GAME_BACKEND_URL="https://staging-elon-api.wallfair.io/"\
                            --build-arg REACT_APP_BACKEND_URL="https://staging-api.wallfair.io/"\
                            --build-arg REACT_APP_CASINO_GAMES_BACKEND_URL="https://staging-casino-api.wallfair.io/"\
                            --build-arg REACT_APP_SOCKET_URL="https://comm-staging-api.wallfair.io/"\
                            --build-arg REACT_APP_PUMP_DUMP_GAME_BACKEND_URL="https://staging-pump-dump-api.wallfair.io/"\
                            --build-arg REACT_APP_NEWS_API_KEY=${{ secrets.REACT_APP_NEWS_API_KEY }}\
                            --build-arg REACT_APP_RECAPTCHA_KEY=${{ secrets.REACT_APP_RECAPTCHA_KEY }}\
                            --build-arg REACT_APP_GTM_ID=${{ secrets.REACT_APP_GTM_ID }}\
                            -t registry.digitalocean.com/wallfair/frontend_k8s_staging:${GITHUB_SHA::6}
          docker push registry.digitalocean.com/wallfair/frontend_k8s_staging:${GITHUB_SHA::6}
      - name: Build the docker image (development)
        if: github.ref == 'refs/heads/development'
        run: |
          docker build . -q --build-arg REACT_APP_CRASH_GAME_BACKEND_URL="https://dev-elon-api.wallfair.io/"\
                            --build-arg REACT_APP_BACKEND_URL="https://dev-api.wallfair.io/"\
                            --build-arg REACT_APP_CASINO_GAMES_BACKEND_URL="https://dev-casino-api.wallfair.io/"\
                            --build-arg REACT_APP_SOCKET_URL="https://comm-dev-api.wallfair.io/"\
                            --build-arg REACT_APP_PUMP_DUMP_GAME_BACKEND_URL="https://dev-pump-dump-api.wallfair.io/"\
                            --build-arg REACT_APP_NEWS_API_KEY=${{ secrets.REACT_APP_NEWS_API_KEY }}\
                            --build-arg REACT_APP_RECAPTCHA_KEY=${{ secrets.REACT_APP_RECAPTCHA_KEY }}\
                            --build-arg REACT_APP_GTM_ID=${{ secrets.REACT_APP_GTM_ID }}\
                            -t registry.digitalocean.com/wallfair/frontend_k8s_develop:${GITHUB_SHA::6}
          docker push registry.digitalocean.com/wallfair/frontend_k8s_develop:${GITHUB_SHA::6}
      - name: Build the docker image (production)
        if: github.ref == 'refs/heads/production'
        run: |
          docker build . -q --build-arg REACT_APP_CRASH_GAME_BACKEND_URL="https://production-elon-api.wallfair.io/"\
                            --build-arg REACT_APP_BACKEND_URL="https://production-api.wallfair.io/"\
                            --build-arg REACT_APP_SOCKET_URL="https://comm-api.wallfair.io/"\
                            --build-arg REACT_APP_CASINO_GAMES_BACKEND_URL="https://casino-api.wallfair.io/"\
                            --build-arg REACT_APP_NEWS_API_KEY=${{ secrets.REACT_APP_NEWS_API_KEY }}\
                            --build-arg REACT_APP_PUMP_DUMP_GAME_BACKEND_URL="https://pump-dump-api.wallfair.io/"\
                            --build-arg REACT_APP_RECAPTCHA_KEY=${{ secrets.REACT_APP_RECAPTCHA_KEY }}\
                            --build-arg REACT_APP_GTM_ID=${{ secrets.REACT_APP_PROD_GTM_ID }}\
                            --build-arg REACT_APP_SHOW_UPCOMING_FEATURES=false\
                            -t registry.digitalocean.com/wallfair/frontend_k8s_prod:${GITHUB_SHA::6}
          docker push registry.digitalocean.com/wallfair/frontend_k8s_prod:${GITHUB_SHA::6}
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Edit deployment image (staging)
        if: github.ref == 'refs/heads/main'
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 4.2.0
          command: |
            cd infra/environments/staging
            kustomize edit set image registry.digitalocean.com/wallfair/frontend_k8s=registry.digitalocean.com/wallfair/frontend_k8s_staging:${GITHUB_SHA::6}
            kustomize build .
      - name: Edit deployment image (development)
        if: github.ref == 'refs/heads/development'
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 4.2.0
          command: |
            cd infra/environments/development
            kustomize edit set image registry.digitalocean.com/wallfair/frontend_k8s=registry.digitalocean.com/wallfair/frontend_k8s_develop:${GITHUB_SHA::6}
            kustomize build .
      - name: Edit deployment image (production)
        if: github.ref == 'refs/heads/production'
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 4.2.0
          command: |
            cd infra/environments/production
            kustomize edit set image registry.digitalocean.com/wallfair/frontend_k8s=registry.digitalocean.com/wallfair/frontend_k8s_prod:${GITHUB_SHA::6}
            kustomize build .
      - uses: actions-hub/kubectl@master
        if: github.ref == 'refs/heads/main'
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -k infra/environments/staging
      - uses: actions-hub/kubectl@master
        if: github.ref == 'refs/heads/development'
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -k infra/environments/development
      - uses: actions-hub/kubectl@master
        if: github.ref == 'refs/heads/production'
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -k infra/environments/production
      
  
